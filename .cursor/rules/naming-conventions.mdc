# C# Naming and Coding Conventions

To maintain consistency across the codebase, please adhere to the following conventions.

## Interfaces

- Prefix interfaces with `I`.
- Example: `IAuthService`, `IUserRepository`.

## Services

- **Interfaces**: Reside in the `Application` layer.
- **Implementations**: Reside in the `Infrastructure` layer.
- Suffix service implementations with `Service`.
- Example: `AuthService` implements `IAuthService`.

## Repositories

- **Interfaces**: Reside in the `Application` layer.
- **Implementations**: Reside in the `Infrastructure` layer.
- Suffix repository implementations with `Repository`.
- Example: `UserRepository` implements `IUserRepository`.

## Data Transfer Objects (DTOs)

- Use C# `record` types for DTOs.
- Suffix DTO names with `Dto`, `Request`, or `Response` where appropriate.
- Examples: `AuthResponseDto`, `CreateBusinessRequest`.

## Controllers

- Suffix controller classes with `Controller`.
- Inherit from `ApiControllerBase`.
- Example: `AuthController`.

## Asynchronous Methods

- Suffix all asynchronous methods with `Async`.
- Example: `GetUserByIdAsync`.
